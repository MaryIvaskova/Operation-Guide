// main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App.jsx';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


// App.jsx
import React from 'react';
import AppRouter from './router/AppRouter';
import MobileOnlyWrapper from './components/MobileOnlyWrapper';
import AnimatedSplash from './components/AnimatedSplash';

const App = () => {
  return (
    <MobileOnlyWrapper>
      <AnimatedSplash />
      <AppRouter />
    </MobileOnlyWrapper>
  );
};

export default App;


// index.css
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: 'Inter', sans-serif;
  background-color: #f9f9f9;
}


// router/AppRouter.jsx
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from '../pages/Home';
import Program from '../pages/Program';
import Topic from '../pages/Topic';
import Feedback from '../pages/Feedback';
import NotSupported from '../pages/NotSupported';

const AppRouter = () => (
  <Router>
    <Routes>
      <Route path="/" element={<Home />} />
      <Route path="/program/:id" element={<Program />} />
      <Route path="/topic/:id" element={<Topic />} />
      <Route path="/feedback" element={<Feedback />} />
      <Route path="/not-supported" element={<NotSupported />} />
    </Routes>
  </Router>
);

export default AppRouter;


// api/programs.js
const API = import.meta.env.VITE_API_URL;

export const fetchPrograms = async () => {
  const res = await fetch(`${API}/programs/`);
  return res.json();
};

export const fetchTopicsByProgram = async (programId) => {
  const res = await fetch(`${API}/programs/${programId}/topics/`);
  return res.json();
};


// components/ProgramCard.jsx
import React from 'react';
import { useNavigate } from 'react-router-dom';

const ProgramCard = ({ program }) => {
  const navigate = useNavigate();
  return (
    <div
      onClick={() => navigate(`/program/${program.id}`)}
      className="p-4 bg-white rounded-lg shadow-md hover:bg-gray-100 cursor-pointer"
    >
      <h2 className="text-lg font-semibold text-center">{program.name}</h2>
      <p className="text-sm text-gray-500 text-center">{program.os}</p>
    </div>
  );
};

export default ProgramCard;


// components/MobileOnlyWrapper.jsx
import React from 'react';
import NotSupported from '../pages/NotSupported';

const MobileOnlyWrapper = ({ children }) => {
  const isMobile = window.innerWidth <= 768;
  return isMobile ? children : <NotSupported />;
};

export default MobileOnlyWrapper;


// pages/Home.jsx
import React, { useEffect, useState } from 'react';
import { fetchPrograms } from '../api/programs';
import ProgramCard from '../components/ProgramCard';

const Home = () => {
  const [programs, setPrograms] = useState([]);

  useEffect(() => {
    fetchPrograms().then(data => setPrograms(data.results));
  }, []);

  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold mb-6 text-center">Оберіть програму</h1>
      <div className="grid grid-cols-1 gap-4">
        {programs.map(program => (
          <ProgramCard key={program.id} program={program} />
        ))}
      </div>
    </div>
  );
};

export default Home;
